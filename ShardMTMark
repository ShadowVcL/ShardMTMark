// ==UserScript==
// @id             iitc_plugin_radius_around_portal
// @name           Portal Radius Marker
// @category       Misc
// @version        1.4
// @description    Adds a 251 meter radius around the selected portal and allows individual deletion of circles
// @author         ShadowVcL
// @downloadURL    https://github.com/ShadowVcL/shardKMmark
// @updateURL      https://your-update-url-here
// @match          *://intel.ingress.com/*
// @match          *://intel-x.ingress.com/*
// @grant          none
// ==/UserScript==

function wrapper(plugin_info) {
    // ensure plugin framework is there, even if iitc is not yet loaded
    if (typeof window.plugin !== 'function') window.plugin = function() {};

    // use own namespace for plugin
    window.plugin.portalRadiusMarker = function() {};

    // Plugin setup
    window.plugin.portalRadiusMarker.setup = function() {
        // Check for Draw Tools plugin
        if (!window.plugin.drawTools) {
            alert('Draw Tools plugin is required for Portal Radius Marker plugin to work.');
            return;
        }

        // Add IITC button
        window.plugin.portalRadiusMarker.active = false;
        var button = $('<a>')
            .text('Radius: off')
            .attr('title', 'Toggle Portal Radius Marker')
            .attr('id', 'portal-radius-marker-button')
            .click(window.plugin.portalRadiusMarker.toggleMarker)
            .appendTo('#toolbox');

        // Add CSS for active state
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                #portal-radius-marker-button {
                    cursor: pointer;
                    color: white;
                }
                #portal-radius-marker-button.active {
                    background-color: #ffce00;
                    color: black;
                }
            `)
            .appendTo('head');
    };

    // Toggle the drawing of the radius
    window.plugin.portalRadiusMarker.toggleMarker = function() {
        window.plugin.portalRadiusMarker.active = !window.plugin.portalRadiusMarker.active;
        if (window.plugin.portalRadiusMarker.active) {
            $('#portal-radius-marker-button')
                .addClass('active')
                .text('Radius: on');
            window.addHook('portalSelected', window.plugin.portalRadiusMarker.drawRadius);
            window.addHook('drawToolsCreated', window.plugin.portalRadiusMarker.setupDeleteHandler);
        } else {
            $('#portal-radius-marker-button')
                .removeClass('active')
                .text('Radius: off');
            window.removeHook('portalSelected', window.plugin.portalRadiusMarker.drawRadius);
            window.plugin.drawTools.clearDeleteLayer(window.plugin.portalRadiusMarker.deleteCircles);
        }
    };

    // Convert circle to polygon points
    window.plugin.portalRadiusMarker.circleToPolygon = function(latlng, radius, numPoints) {
        var angleStep = 360 / numPoints;
        var points = [];
        for (var i = 0; i < numPoints; i++) {
            var angle = i * angleStep;
            var radian = angle * (Math.PI / 180);
            var lat = latlng.lat + (radius / 111320) * Math.cos(radian);
            var lng = latlng.lng + (radius / (40075000 * Math.cos(latlng.lat * Math.PI / 180) / 360)) * Math.sin(radian);
            points.push([lat, lng]);
        }
        return points;
    };

    // Draw radius around the selected portal
    window.plugin.portalRadiusMarker.drawRadius = function(event) {
        if (window.plugin.portalRadiusMarker.active && event.selectedPortalGuid) {
            var portal = window.portals[event.selectedPortalGuid];
            if (portal) {
                var latlng = portal.getLatLng();
                var points = window.plugin.portalRadiusMarker.circleToPolygon(latlng, 251, 40);

                // Use Draw Tools API to create a polygon
                var layer = L.polygon(points, { color: 'blue', weight: 2, fill: false });
                window.plugin.drawTools.drawnItems.addLayer(layer);
                window.plugin.drawTools.save();
                window.plugin.portalRadiusMarker.currentCircles.push(layer);
            }
        }
    };

    // Setup the deletion handler
    window.plugin.portalRadiusMarker.setupDeleteHandler = function() {
        window.plugin.drawTools.addDeleteLayer(window.plugin.portalRadiusMarker.deleteCircles);
    };

    // Delete circles
    window.plugin.portalRadiusMarker.deleteCircles = function() {
        for (var i = 0; i < window.plugin.portalRadiusMarker.currentCircles.length; i++) {
            window.plugin.drawTools.drawnItems.removeLayer(window.plugin.portalRadiusMarker.currentCircles[i]);
        }
        window.plugin.drawTools.save();
        window.plugin.portalRadiusMarker.currentCircles = [];
    };

    window.plugin.portalRadiusMarker.currentCircles = [];

    var setup = window.plugin.portalRadiusMarker.setup;
    setup.info = plugin_info; // Add the plugin info to the function as a property
    if (!window.bootPlugins) window.bootPlugins = [];
    window.bootPlugins.push(setup);
    if (window.iitcLoaded) setup();
}

// Inject the script into the site context
var script = document.createElement('script');
var info = { buildName: 'Portal Radius Marker', dateTimeVersion: '2024-06-03-001' };
script.appendChild(document.createTextNode('(' + wrapper + ')(' + JSON.stringify(info) + ');'));
(document.body || document.head || document.documentElement).appendChild(script);
