// ==UserScript==
// @id             iitc_plugin_radius_around_portal
// @name           Portal Radius Marker
// @category       Misc
// @version        1.4
// @description    Adds a 251 meter radius around the selected portal and allows individual deletion of circles
// @author         ShadowVcL
// @downloadURL    https://github.com/ShadowVcL/shardKMmark
// @updateURL      https://your-update-url-here
// @match          *://intel.ingress.com/*
// @match          *://intel-x.ingress.com/*
// @grant          none
// ==/UserScript==

function wrapper(plugin_info) {
    // ensure plugin framework is there, even if iitc is not yet loaded
    if (typeof window.plugin !== 'function') window.plugin = function() {};

    // use own namespace for plugin
    window.plugin.portalRadiusMarker = function() {};

    // Plugin setup
    window.plugin.portalRadiusMarker.setup = function() {
        // Check for Draw Tools plugin
        if (!window.plugin.drawTools) {
            alert('Draw Tools plugin is required for Portal Radius Marker plugin to work.');
            return;
        }

        // Add IITC button
        window.plugin.portalRadiusMarker.active = false;
        var button = $('<a>')
            .text('Radius: off')
            .attr('title', 'Toggle Portal Radius Marker')
            .attr('id', 'portal-radius-marker-button')
            .click(window.plugin.portalRadiusMarker.toggleMarker)
            .appendTo('#toolbox');

        // Add CSS for active state
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                #portal-radius-marker-button {
                    cursor: pointer;
                    color: white;
                }
                #portal-radius-marker-button.active {
                    background-color: #ffce00;
                    color: black;
                }
            `)
            .appendTo('head');

        // Override the Draw Tools delete function to also handle circles created by this plugin
        var originalDelete = window.plugin.drawTools.delete;
        window.plugin.drawTools.delete = function(layer) {
            if (layer instanceof L.Circle && window.plugin.portalRadiusMarker.currentCircles.includes(layer)) {
                window.plugin.portalRadiusMarker.removeCircle(layer);
            }
            return originalDelete.apply(this, arguments);
        };
    };

    // Toggle the drawing of the radius
    window.plugin.portalRadiusMarker.toggleMarker = function() {
        window.plugin.portalRadiusMarker.active = !window.plugin.portalRadiusMarker.active;
        if (window.plugin.portalRadiusMarker.active) {
            $('#portal-radius-marker-button')
                .addClass('active')
                .text('Radius: on');
            window.addHook('portalSelected', window.plugin.portalRadiusMarker.drawRadius);
        } else {
            $('#portal-radius-marker-button')
                .removeClass('active')
                .text('Radius: off');
            window.removeHook('portalSelected', window.plugin.portalRadiusMarker.drawRadius);
        }
    };

    // Draw radius around the selected portal
    window.plugin.portalRadiusMarker.drawRadius = function(event) {
        if (window.plugin.portalRadiusMarker.active && event.selectedPortalGuid) {
            var portal = window.portals[event.selectedPortalGuid];
            if (portal) {
                var latlng = portal.getLatLng();
                // Draw a circle with a 251 meter radius using Draw Tools
                var circle = L.circle(latlng, { radius: 251, color: 'blue', weight: 2, fill: false });
                window.plugin.drawTools.drawnItems.addLayer(circle);
                window.plugin.portalRadiusMarker.currentCircles.push(circle);
            }
        }
    };

    // Clear all circles drawn by this plugin
    window.plugin.portalRadiusMarker.clearCircles = function() {
        for (var i = 0; i < window.plugin.portalRadiusMarker.currentCircles.length; i++) {
            window.plugin.drawTools.drawnItems.removeLayer(window.plugin.portalRadiusMarker.currentCircles[i]);
        }
        window.plugin.portalRadiusMarker.currentCircles = [];
    };

    // Remove a single circle
    window.plugin.portalRadiusMarker.removeCircle = function(circle) {
        window.plugin.drawTools.drawnItems.removeLayer(circle);
        var index = window.plugin.portalRadiusMarker.currentCircles.indexOf(circle);
        if (index > -1) {
            window.plugin.portalRadiusMarker.currentCircles.splice(index, 1);
        }
    };

    window.plugin.portalRadiusMarker.currentCircles = [];

    var setup = window.plugin.portalRadiusMarker.setup;
    setup.info = plugin_info; // Add the plugin info to the function as a property
    if (!window.bootPlugins) window.bootPlugins = [];
    window.bootPlugins.push(setup);
    if (window.iitcLoaded) setup();
}

// Inject the script into the site context
var script = document.createElement('script');
var info = { buildName: 'Portal Radius Marker', dateTimeVersion: '2024-06-03-001' };
script.appendChild(document.createTextNode('(' + wrapper + ')(' + JSON.stringify(info) + ');'));
(document.body || document.head || document.documentElement).appendChild(script);
